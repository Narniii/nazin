import Link from "next/link";
import { Rate } from "antd";
import Head from "next/head";
import Form from "../../../comps/Form";
import styles from "./technoMarket.module.css";
import LoginForm from '../../../comps/LoginForm'
import { UserOutlined } from '@ant-design/icons';
import React, { useState, useEffect } from "react";
import Product from "../../../comps/Product/product";
import { useDispatch, useSelector } from "react-redux";
import AddProduct from "../../../comps/addForms/addProduct";
import { Menu, Dropdown, message, Modal, Button } from 'antd';
import * as actions from "../../../reduxTest/actions/marketActions";
import LocationOnOutlinedIcon from "@material-ui/icons/LocationOnOutlined";
import ShoppingCartOutlinedIcon from "@material-ui/icons/ShoppingCartOutlined"; // const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];

export async function getStaticProps() {
  const res = await fetch(
    "https://run.mocky.io/v3/a8d03157-a077-44db-9746-695e18a7549e"
  );
  const data = await res.json();
  return {
    props: { data },
  };
}
//      --------------------------------------------   //
export default function TechnoMarket({ data }) {

  const [isModalVisible, setIsModalVisible] = useState(false);
  const showModal = () => {
    setIsModalVisible(true);
  };

  const handleCancel = () => {
    setIsModalVisible(false);
  };

  const menu = (
    <Menu >
      <Menu.Item key="1" icon={<UserOutlined />}>
        <Link href='/marketerLogin'>
          <a>as marketer</a>
        </Link>
      </Menu.Item >
      <Menu.Item key="2" icon={<UserOutlined />} onClick={showModal}>
        as costumer
      </Menu.Item>
      <Modal title="LOGIN" onCancel={handleCancel} visible={isModalVisible} footer="">
        <LoginForm />
      </Modal>
    </Menu>
  );

  const basket = useSelector((state) => state.basket);
  const totalPrice = useSelector((state) => state.price);

  const dispatch = useDispatch();
  console.log(basket);

  const [star, setstar] = useState(3);
  const handleStar = (star) => {
    setstar(star);
  };
  //      --------------------------------------------   //
  return (
    <div className={styles.page}>
      <div className={styles.container}>
        <Head>
          <title>Techno Market</title>
          <meta name="description" content="Generated by Naarin" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className={styles.addProduct}>
          <button onClick={showModal}>+</button>
          <Modal title="Add a new product" onCancel={handleCancel} visible={isModalVisible} footer="">
            <AddProduct />
          </Modal>
        </div>
        <div className={styles.bar}>
          <Dropdown.Button style={{ position: "absolute", left: "10px", bottom: "10px" }} overlay={menu} trigger="click">
            Login
          </Dropdown.Button>
          <div className={styles.logo}></div>
          <h1 className={styles.title}>{data.name}</h1>
          <div className={styles.stars}>
            <p>{data.rate_average}</p>
            <span>
              <Rate onChange={handleStar} star={star} />
              {/* {value ? <span className="ant-rate-text">{desc[value - 1]}</span> : ''} */}
            </span>
            <p>{data.rate_count}</p>
          </div>
          <div className={styles.address}>
            <p>{data.address}</p>
            <LocationOnOutlinedIcon />
          </div>
        </div>

        <div className={styles.productsContainer}>
          {data.products.map((product, i) => (
            <Product
              id={product.id}
              index={i}
              key={i}
              name={product.name}
              image={product.image}
              price={product.price}
              count={basket.basket.filter(x => x === product).length}
              add={() => { dispatch(actions.add(product)), dispatch(actions.addPrice(product.price)) }}
              min={() => { dispatch(actions.min(product)), dispatch(actions.minPrice(product.price)) }}
            />
          ))}
        </div>
      </div>

      <footer className={styles.footer}>
        <p>${totalPrice.totalPrice}</p>
        <p>Basket</p>
        <div
          style={{
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <p style={{ backgroundColor: "#1a7da7c4", width: "30px", height: "30px", borderRadius: "20px", padding: "10px" }}>{basket.basket.length}</p>
          <ShoppingCartOutlinedIcon />
        </div>

      </footer>

    </div>
  );
}
